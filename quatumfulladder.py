# -*- coding: utf-8 -*-
"""QuatumFullAdder.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10xAvcrvOO3l0zYMVx12R7llDTh_BDsNm
"""

!pip install qiskit
from qiskit import Aer, execute, QuantumCircuit
from qiskit.visualization import plot_histogram

#Thinking about making a full adder --
## Three Qubit inputs - A, B and Cin

half_adder1 = QuantumCircuit(7,2)
half_adder1.barrier()




#***************************** INPUT BELOW **********************8

half_adder1.x(0)
half_adder1.x(1)
half_adder1.x(2)

#*******************************************************************






half_adder1.cx(0,3)
half_adder1.cx(1,3)
half_adder1.ccx(0,1,4)
half_adder1.barrier()

half_adder1.ccx(3,2,5)
#4 and 5 Or in 6
half_adder1.barrier()

half_adder1.x(4)
half_adder1.x(5)
half_adder1.ccx(4,5,6)
half_adder1.x(6)


half_adder1.cx(2,3)
half_adder1.barrier()
half_adder1.measure(6,1)



half_adder1.measure(3,0)

counts = execute(half_adder1, Aer.get_backend("qasm_simulator")).result().get_counts()
plot_histogram(counts)

half_adder1.draw()

"""Above was a full-adder"""

